const video = document.getElementById('video');

Promise.all([
    faceapi.nets.tinyFaceDetector.loadFromUri('../models'),
    faceapi.nets.faceLandmark68Net.loadFromUri('../models'),
    faceapi.nets.faceRecognitionNet.loadFromUri('../models'),
    faceapi.nets.faceExpressionNet.loadFromUri('../models'),
    faceapi.nets.ageGenderNet.loadFromUri('../models')
]).then(startVideo);

function startVideo() {
    navigator.mediaDevices
        .getUserMedia({ video: {} })
        .then((stream) => (video.srcObject = stream))
        .catch((err) => console.error(err));
}

function endVideo() {
    video.srcObject.getTracks().forEach((track) => track.stop());
    video.style.display = 'none';
    // document.location.href = '../index.html';
}

video.addEventListener('playing', () => {
    const canvas = faceapi.createCanvasFromMedia(video);
    document.body.append(canvas);
    const displaySize = { width: video.width, height: video.height };
    faceapi.matchDimensions(canvas, displaySize);
    setInterval(async () => {
        const detections = await faceapi
            .detectAllFaces(video, new faceapi.TinyFaceDetectorOptions())
            .withFaceLandmarks()
            .withAgeAndGender()
            .withFaceExpressions();
        const resizedDetections = faceapi.resizeResults(detections, displaySize);
        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);
        faceapi.draw.drawDetections(canvas, resizedDetections);
        faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);
        faceapi.draw.drawFaceExpressions(canvas, resizedDetections);
        resizedDetections.forEach((detection) => {
            const box = detection.detection.box;
            const drawBox = new faceapi.draw.DrawBox(box, {
                label: Math.round(detection.age) + ' year old ' + detection.gender
            });
            drawBox.draw(canvas);
        });
        const faces = resizedDetections.length;
        const expressions = resizedDetections[0]?.expressions;
        console.log(expressions);
        const isOne = faces === 1;
        const text = document.getElementById('count');
        text.innerText = `${faces} ${isOne ? 'face' : 'faces'} detected in the video`;
        // if (expressions) {
        //     const { happy } = expressions;
        //     console.log({ happy });
        //     if (happy > 0.7) {
        //         endVideo();
        //     }
        // }
    }, 200);
});
